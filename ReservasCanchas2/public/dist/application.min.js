"use strict";var ApplicationConfiguration=function(){var applicationModuleName="reservascanchas2",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("reservas"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("homeStudent",{url:"/homeStudent",templateUrl:"modules/core/views/homeStudent.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("HomeStudentclientcontroller",["$scope","$location","Reservafechaestudiante","Authentication",function($scope,$location,Reservafechaestudiante,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("reservas").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Reservas","reservas","dropdown","/reservas(/create)?"),Menus.addSubMenuItem("topbar","reservas","List Reservas","reservas"),Menus.addSubMenuItem("topbar","reservas","New Reserva","reservas/create")}]),angular.module("reservas").config(["$stateProvider",function($stateProvider){$stateProvider.state("reserva-estudiante",{url:"/reserva-estudiante",templateUrl:"modules/reservas/views/reserva-estudiante.client.view.html"}).state("listReservas",{url:"/reservas",templateUrl:"modules/reservas/views/list-reservas.client.view.html"}).state("listReservasEspacio",{url:"/reservasEspacio/:espacioId",templateUrl:"modules/reservas/views/list-reservasEspacio.client.view.html"}).state("listReservasSemana",{url:"/reservasSemana",templateUrl:"modules/reservas/views/reservasSemana.client.view.html"}).state("createReserva",{url:"/reservas/create",templateUrl:"modules/reservas/views/create-reserva.client.view.html"}).state("viewReserva",{url:"/reservas/:reservaId",templateUrl:"modules/reservas/views/view-reserva.client.view.html"}).state("model",{url:"/modelo/:espacioId",templateUrl:"modules/reservas/views/model.client.view.html"}).state("editReserva",{url:"/reservas/:reservaId/edit",templateUrl:"modules/reservas/views/edit-reserva.client.view.html"})}]),angular.module("reservas").controller("ReservasController",["$scope","$stateParams","$location","Authentication","Reservas","Reservaslista","Reservafechaestudiante","$modal","$log",function($scope,$stateParams,$location,Authentication,Reservas,Reservaslista,Reservafechaestudiante,$modal,$log){$scope.authentication=Authentication,$scope.registrarReserva=function(size,diaSemana){var codigoEspacio=$stateParams.espacioId;if($scope.horarios=[{codigo:14,valor:"14PM-15PM"},{codigo:15,valor:"15PM-16PM"},{codigo:16,valor:"16PM-17PM"},{codigo:17,valor:"17PM-18PM"}],$scope.reservo=[{yaReservo:0}],codigoEspacio>3){$scope.horarios=[{codigo:8,valor:"8AM-9AM"},{codigo:9,valor:"9AM-10AM"},{codigo:10,valor:"10AM-11AM"},{codigo:11,valor:"11AM-12M"},{codigo:14,valor:"14PM-15PM"},{codigo:15,valor:"15PM-16PM"},{codigo:16,valor:"16PM-17PM"},{codigo:17,valor:"17PM-18PM"}];var fecha=new Date,dSemanaActual=fecha.getDay();if(diaSemana!==dSemanaActual)return void alert("La reserva de la cancha de tenis se debe realizar el mismo dia que esta sera utilizada")}console.log("Dia semana",diaSemana),console.log("Horarios:",$scope.horarios);var modalReservaEstudiante=$modal.open({templateUrl:"modules/reservas/views/reserva-estudiante.client.view.html",controller:["$scope","$modalInstance","horarios","reservo",function($scope,$modalInstance,horarios,reservo){$scope.horarios=horarios,$scope.reservo=reservo,$scope.diaSemana=diaSemana,$scope.codigoEspacio=codigoEspacio,$scope.authentication=Authentication,$scope.salirReserva=function(){$modalInstance.close()},$scope.reservar=function(hora){$scope.horaReserva=hora;var dt=new Date,dSemana=dt.getDay();3>=codigoEspacio?$scope.tipo_espacio="Cancha Sintetica":($scope.tipo_espacio="Cancha de Tenis",console.log("Dia semana: ",dSemana),console.log("Dia semana: ",diaSemana));var dMes=dt.getDate(),agregarDias=$scope.diaSemana-dSemana;dt.setDate(dMes+agregarDias),dt.setHours(0),dt.setMinutes(0),dt.setSeconds(0),dt.setMilliseconds(0),console.log("Fecha Reserva: ",dt),console.log("Codigo Espacio Seleccionado: ",$scope.codigoEspacio),console.log("Espacio Seleccionado: ",$scope.tipo_espacio),console.log("Dia de la Semana Seleccionado : ",$scope.diaSemana),console.log("Esta es la hora seleccionada",$scope.horaReserva),console.log("Usuario: ",$scope.authentication.user.identificacion);var reserva=new Reservas({persona:$scope.authentication.user.identificacion,tipo_espacio:$scope.tipo_espacio,numero_espacio:$scope.codigoEspacio,fecha:dt,hora:$scope.horaReserva});reserva.$save(function(response){$scope.salirReserva(),$location.path("reservas/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})}}],size:size,resolve:{horarios:function(){return $scope.horarios},reservo:function(){return $scope.reservo}}});modalReservaEstudiante.result.then(function(horarioSelec){$scope.horario=horarioSelec},function(){$log.info("Modal designe: "+new Date)})},$scope.create=function(){var reserva=new Reservas({persona:this.persona,tipo_espacio:this.tipo_espacio,numero_espacio:this.numero_espacio,fecha:this.fecha,hora:this.hora});reserva.$save(function(response){$location.path("reservas/"+response._id),$scope.persona="",$scope.tipo_espacio="",$scope.numero_espacio="",$scope.fecha="",$scope.hora=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(reserva){$scope.authentication=Authentication,console.log("Tipo Usuario: ",$scope.authentication.user.tipoUser);var i;if(reserva){reserva.$remove();for(i in $scope.reservas)$scope.reservas[i]===reserva&&$scope.reservas.splice(i,1)}else $scope.reserva.$remove(function(){$scope.authentication=Authentication,console.log("Tipo Usuario: ",$scope.authentication.user.tipoUser),2==$scope.authentication.user.tipoUser?(alert("Reserva Eliminada Correctamente."),$location.path("homeStudent")):1==$scope.authentication.user.tipoUser&&$location.path("reservas")})},$scope.update=function(){var reserva=$scope.reserva;reserva.$update(function(){$location.path("reservas/"+reserva._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.reservas=Reservas.query()},$scope.principalEstudiante=function(){$location.path("/homeStudent")},$scope.principalAdmin=function(){$location.path("/")},$scope.listarReservas=function(){$location.path("/reservas")},$scope.BuscarPorEspacio=function(){console.log("Entro a la funcion BuscarPorEspacio");var espacioId=$stateParams.espacioId;console.log("Id del Tipo de Espacio",espacioId),Reservaslista.getReservas(espacioId).success(function(res){console.log("PETICION:",res),$scope.reservas=res}).error(function(err){console.log("Error: ",err)})},$scope.findOne=function(){$scope.reserva=Reservas.get({reservaId:$stateParams.reservaId})},$scope.verificarDisponibilidad=function(espacioId){$scope.authentication=Authentication;var codigoEspacio=espacioId;console.log("El codigo del espacion es:",codigoEspacio);var dt=new Date,dSemana=dt.getDay(),dMes=dt.getDate();console.log("Dia semana:",dSemana);var fechaInicial=new Date,fechaFinal=new Date;if(fechaInicial.setDate(dMes),fechaInicial.setHours(0),fechaInicial.setMinutes(0),fechaInicial.setSeconds(0),fechaFinal.setMilliseconds(0),fechaFinal.setDate(dMes+4),fechaFinal.setHours(0),fechaFinal.setMinutes(0),fechaFinal.setSeconds(0),fechaFinal.setMilliseconds(0),console.log("fecha Inicial: ",fechaInicial),console.log("fecha Final: ",fechaFinal),3>=codigoEspacio){if(5==dSemana)return console.log("Recuerde que la reserva de las canchas Sinteticas se debe realizar los lunes de cada semana."),alert("La reserva de las canchas sintéticas se realizan los lunes de cada semana."),void $location.path("/homeStudent");Reservafechaestudiante.getReservaUsuario(fechaInicial,fechaFinal,$scope.authentication.user.identificacion).success(function(res){console.log("PETICION:",res);var reservas=res;if(0!==reservas.length){var reser=reservas[0];return console.log(reser),console.log("Señor Usuario ya usted tiene una reserva para esta semana."),alert("Señor Usuario  usted ya tiene una reserva para esta semana."),void $location.path("reservas/"+reser._id)}$location.path("modelo/"+espacioId)}).error(function(err){console.log("Error: ",err)})}else Reservafechaestudiante.getReservaUsuario(fechaInicial,fechaFinal,$scope.authentication.user.identificacion).success(function(res){console.log("PETICION:",res);var reservas=res;if(0!==reservas.length){var reser=reservas[0];return console.log(reser),console.log("Señor Usuario ya usted tiene una reserva para esta semana."),alert("Señor Usuario  usted ya tiene una reserva para esta semana."),void $location.path("reservas/"+reser._id)}$location.path("modelo/"+espacioId)}).error(function(err){console.log("Error: ",err)})},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.disabled=function(date,mode){return"day"===mode&&(0===date.getDay()||6===date.getDay())},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0]}]),angular.module("reservas").factory("Reservafechaestudiante",["$http",function($http){return{getReservaUsuario:function(fechaInicial,fechaFinal,usuarioId){return $http({url:"/reservaFechaUsuario/"+fechaInicial+"/"+fechaFinal+"/"+usuarioId,method:"GET",dataType:"JSON"})}}}]),angular.module("reservas").factory("Reservas",["$resource",function($resource){return $resource("reservas/:reservaId",{reservaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("reservas").factory("Reservaslista",["$http",function($http){return{getReservas:function(espacioId){return $http({url:"/reservasEspacio/"+espacioId,method:"GET",dataType:"JSON"})}}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,1===$scope.authentication.user.tipoUser&&$location.path("/"),2===$scope.authentication.user.tipoUser&&$location.path("homeStudent"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("2"===$scope.authentication.user.tipoUser?"/homeStudent":"/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,"2"===$scope.authentication.user.tipoUser?(console.log("Entro en el si"),$location.path("/homeStudent")):(console.log("Entro en el no"),$location.path("/"))}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);